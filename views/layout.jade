doctype html
html
	head
		title= title
		meta(name="viewport" content="width=device-width, initial-scale=1,maximum-scale=1, user-scalable=no")
		link(rel='stylesheet', href='/css/index.css?v=#{_v}')
		script(src="/js/sys/mobile.js?v=#{_v}")
		script(src="/js/sys/vue.js?v=#{_v}")
		script(src="/js/sys/axios.min.js?v=#{_v}")
		script.
			//- window.onerror=function(e){
			//- 	alert(JSON.stringify(e));
			//- }
	body
	block content

	#export_dom(v-cloak)
		.alert-layer(v-if='is_confirm || is_alert')
			.alert-confirm.m-alert(v-if='is_confirm')
				p {{alert_txt}}
				div
					button(@click='confirm_btn()') 确定
					button.gray-bg(@click='cancel_btn()')  取消
			.alert-alert.m-alert(v-if='is_alert')
				p {{alert_txt}}
				//div
					button(@click='confirm_btn()') 确定
	script.
		if(!localStorage.user && location.pathname!='/' && location.pathname!='/register')
			location.href='/register?url='+escape(location.href);
		var vapp_layer=new Vue({
			el:'#export_dom',
			data:{
				is_alert:false,
				is_confirm:false,
				alert_txt:'',
				confirm_obj:undefined,
				confirm_func:undefined,
				cancel_func:undefined
			},
			methods:{
				confirm:function(txt,obj,ok,cancel){
					this.is_confirm=true;
					this.alert_txt=txt;
					this.confirm_func=ok;
					this.cancel_func=cancel;
				},
				confirm_btn:function(){
					this.is_confirm=false;
					if(this.confirm_func){
						this.confirm_func(this.confirm_obj);
					}
				},
				cancel_btn:function(){
					this.is_confirm=false;
					if(this.cancel_func){
						this.cancel_func(this.confirm_obj);
					}
				},
				alert:function(txt,time,callback){
					var scope=this;
					this.alert_txt=txt;
					this.is_alert=true;
					if(!time || time>=0){
						setTimeout(function(){
							scope.is_alert=false;
							if(callback){
								callback();
							}
						},time?time:1500)
					}
				}
			}
		})